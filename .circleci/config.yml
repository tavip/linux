version: 2
general:
  artifacts:

do_steps: &do_steps
 steps:
  - run: echo "$CROSS_COMPILE" > ~/_cross_compile
  - restore_cache:
      key: code-tree-shallow
  - run:
      name: checkout build tree
      command: |
        mkdir -p ~/.ssh/
        ssh-keyscan -H github.com >> ~/.ssh/known_hosts
        if ! [ -d .git ]; then
          git clone --depth=1 $CIRCLE_REPOSITORY_URL .;
        fi
        if [[ $CIRCLE_BRANCH == pull/* ]]; then
           git fetch --depth=1 origin $CIRCLE_BRANCH/head;
        else
           git fetch --depth=1 origin $CIRCLE_BRANCH;
        fi
        git reset --hard $CIRCLE_SHA1
  - save_cache:
      key: code-tree-shallow-{{ epoch }}
      paths:
        - /home/ubuntu/project/.git
  - run: cd tools/lkl && make clean
  - run: mkdir -p /home/ubuntu/.ccache
  - restore_cache:
      key: compiler-cache-{{ checksum "~/_cross_compile" }}
  - run:
      name: build DPDK
      command: |
        if [ "$MKARG" = "dpdk=yes" ]; then
          sudo apt-get update && sudo apt-get install -y linux-headers-$(uname -r)
          cd tools/lkl && ./scripts/dpdk-sdk-build.sh;
        fi
  - run:
      name: copy mingw binutils
      command: |
        if [ "$CROSS_COMPILE" = "i686-w64-mingw32-" ]; then
          sudo cp tools/lkl/bin/i686-w64-mingw32-* /usr/bin;
        fi
  - run:
      name: start android emulator
      command: |
        if [[ $CROSS_COMPILE == *android* ]]; then
          emulator -avd Nexus5_API24 -no-window -no-audio -no-boot-anim;
        fi
      background: true
  - run: cd tools/lkl && make -j8 ${MKARG}
  - save_cache:
     paths:
       - /home/ubuntu/.ccache
     key: compiler-cache-{{ checksum "~/_cross_compile" }}-{{ epoch }}
  - run:
      name: wait android emulator to boot
      command: |
        if [[ $CROSS_COMPILE == *android* ]]; then
          /home/ubuntu/circle-android.sh wait-for-boot;
        fi
  - run: cd tools/lkl && make test
  - run: if [ $VALGRIND = 1]; then cd tools/lkl && make valgrind; fi
  - run:
      name: save test results
      command: |
        mkdir -p ~/junit/
        find ./tools/lkl/ -type f -name "*.xml" -exec cp {} ~/junit/ \;
      when: always
  - store_test_results:
      path: ~/junit
  - store_artifacts:
      path: ~/junit

## Customize the test machine
jobs:
  x86_64:
   docker:
     - image: lkldocker/circleci-x86_64:0.1
   environment:
     CROSS_COMPILE: ""
     MKARG: "dpdk=yes"
     LKL_TEST_DHCP: 1
   <<: *do_steps

  mingw32:
   docker:
     - image: lkldocker/circleci-mingw:0.1
   environment:
     CROSS_COMPILE: "i686-w64-mingw32-"
     LKL_TEST_DHCP: 1
   <<: *do_steps

  android-arm32:
   docker:
     - image: lkldocker/circleci-android-arm32:0.1
   environment:
     CROSS_COMPILE: "arm-linux-androideabi-"
     LKL_TEST_DHCP: 1
     LKL_ANDROID_TEST: 1
     ANDROID_SDK_ROOT: /home/ubuntu/android-sdk
   <<: *do_steps

  android-aarch64:
   docker:
     - image: lkldocker/circleci-android-arm64:0.1
   environment:
     CROSS_COMPILE: "aarch64-linux-android-"
     LKL_TEST_DHCP: 1
     LKL_ANDROID_TEST: 1
     ANDROID_SDK_ROOT: /home/ubuntu/android-sdk
   <<: *do_steps

  x86_64_valgrind:
   docker:
     - image: lkldocker/circleci-x86_64:0.1
   environment:
     CROSS_COMPILE: ""
     MKARG: "dpdk=yes"
     LKL_TEST_DHCP: 1
     VALGRIND: 1
   <<: *do_steps

  checkpatch:
   docker:
     - image: lkldocker/circleci:0.1
   environment:
   steps:
     - restore_cache:
        key: code-tree-full-history
     - checkout
     - run: tools/lkl/scripts/checkpatch.sh
     - save_cache:
        key: code-tree-full-history-{{ epoch }}
        paths:
          - /home/ubuntu/project/.git
        when: always

workflows:
  version: 2
  build:
    jobs:
     - x86_64
     - mingw32
     - android-arm32
     - android-aarch64
     - checkpatch
